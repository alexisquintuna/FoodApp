{"ast":null,"code":"var _jsxFileName = \"/Users/alexisquintuna/Desktop/React/FoodAppReact/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst notFiveChara = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputvalidity, setFormInputvalidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = notFiveChara(enteredPostalCode);\n    setFormInputvalidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCode\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('Form Was Submitted!');\n    console.log(enteredName, enteredStreetIsValid, enteredCity, enteredPostalCode);\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputvalidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputvalidity.street ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputvalidity.city ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputvalidity.postalCode ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !formInputvalidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter A Valid Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !formInputvalidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter A Valid Street Address!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formInputvalidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter A Valid City!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !formInputvalidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please Enter A Valid Postal Code (5 characters)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"gJ4bfH0dxF6HUaqXRA19IH+JEU4=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/alexisquintuna/Desktop/React/FoodAppReact/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","notFiveChara","length","Checkout","props","formInputvalidity","setFormInputvalidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","console","log","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","form","actions","onCancel","submit"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA5C;;AACA,MAAMC,YAAY,GAAIF,KAAD,IAAWA,KAAK,CAACC,IAAN,GAAaE,MAAb,KAAwB,CAAxD;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC;AACvDW,IAAAA,IAAI,EAAE,IADiD;AAEvDC,IAAAA,MAAM,EAAE,IAF+C;AAGvDC,IAAAA,IAAI,EAAE,IAHiD;AAIvDC,IAAAA,UAAU,EAAE;AAJ2C,GAAD,CAA1D;AAMA,QAAMC,YAAY,GAAGhB,MAAM,EAA3B;AACA,QAAMiB,cAAc,GAAGjB,MAAM,EAA7B;AACA,QAAMkB,kBAAkB,GAAGlB,MAAM,EAAjC;AACA,QAAMmB,YAAY,GAAGnB,MAAM,EAA3B;;AAEA,QAAMoB,cAAc,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,WAAW,GAAGP,YAAY,CAACQ,OAAb,CAAqBpB,KAAzC;AACA,UAAMqB,aAAa,GAAGR,cAAc,CAACO,OAAf,CAAuBpB,KAA7C;AACA,UAAMsB,iBAAiB,GAAGR,kBAAkB,CAACM,OAAnB,CAA2BpB,KAArD;AACA,UAAMuB,WAAW,GAAGR,YAAY,CAACK,OAAb,CAAqBpB,KAAzC;AAEA,UAAMwB,kBAAkB,GAAG,CAACzB,OAAO,CAACoB,WAAD,CAAnC;AACA,UAAMM,oBAAoB,GAAG,CAAC1B,OAAO,CAACsB,aAAD,CAArC;AACA,UAAMK,kBAAkB,GAAG,CAAC3B,OAAO,CAACwB,WAAD,CAAnC;AACA,UAAMI,wBAAwB,GAAGzB,YAAY,CAACoB,iBAAD,CAA7C;AAEAf,IAAAA,oBAAoB,CAAC;AACjBC,MAAAA,IAAI,EAAEgB,kBADW;AAEjBf,MAAAA,MAAM,EAAEgB,oBAFS;AAGjBf,MAAAA,IAAI,EAAEgB,kBAHW;AAIjBf,MAAAA,UAAU,EAAEW;AAJK,KAAD,CAApB;AAOH,UAAMM,WAAW,GACbJ,kBAAkB,IAClBC,oBADA,IAEAC,kBAFA,IAGAC,wBAJJ;;AAMI,QAAG,CAACC,WAAJ,EAAiB;AACf;AACD;;AAEFC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACCD,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ,EAAyBM,oBAAzB,EAA+CF,WAA/C,EAA4DD,iBAA5D;AACJ,GAhCD;;AAkCA,QAAMS,kBAAkB,GAAI,GAAEjC,OAAO,CAACkC,OAAQ,IAAG1B,iBAAiB,CAACE,IAAlB,GAAyB,EAAzB,GAA8BV,OAAO,CAACmC,OAAQ,EAA/F;AACA,QAAMC,oBAAoB,GAAI,GAAEpC,OAAO,CAACkC,OAAQ,IAAG1B,iBAAiB,CAACG,MAAlB,GAA2B,EAA3B,GAAgCX,OAAO,CAACmC,OAAQ,EAAnG;AACA,QAAME,kBAAkB,GAAI,GAAErC,OAAO,CAACkC,OAAQ,IAAG1B,iBAAiB,CAACI,IAAlB,GAAyB,EAAzB,GAA8BZ,OAAO,CAACmC,OAAQ,EAA/F;AACA,QAAMG,wBAAwB,GAAI,GAAEtC,OAAO,CAACkC,OAAQ,IAAG1B,iBAAiB,CAACK,UAAlB,GAA+B,EAA/B,GAAoCb,OAAO,CAACmC,OAAQ,EAA3G;AAEF,sBACE;AAAM,IAAA,SAAS,EAAEnC,OAAO,CAACuC,IAAzB;AAA+B,IAAA,QAAQ,EAAErB,cAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEe,kBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAEnB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAACN,iBAAiB,CAACE,IAAnB,iBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAE0B,oBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,GAAG,EAAErB;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAACP,iBAAiB,CAACG,MAAnB,iBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHhC;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,SAAS,EAAE0B,kBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,GAAG,EAAErB;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAACR,iBAAiB,CAACI,IAAnB,iBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAgBE;AAAK,MAAA,SAAS,EAAE0B,wBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,GAAG,EAAErB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAACT,iBAAiB,CAACK,UAAnB,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHpC;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAqBE;AAAK,MAAA,SAAS,EAAEb,OAAO,CAACwC,OAAxB;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEjC,KAAK,CAACkC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAEzC,OAAO,CAAC0C,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAjFD;;GAAMpC,Q;;KAAAA,Q;AAmFN,eAAeA,QAAf","sourcesContent":["import { useRef, useState } from \"react\";\n\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst notFiveChara = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => { \n    const [formInputvalidity, setFormInputvalidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n    });\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalCodeInputRef = useRef();\n    const cityInputRef = useRef();\n\n    const confirmHandler = (event) => {\n        event.preventDefault();\n\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostalCode = postalCodeInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const enteredNameIsValid = !isEmpty(enteredName);\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\n        const enteredCityIsValid = !isEmpty(enteredCity);\n        const enteredPostalCodeIsValid = notFiveChara(enteredPostalCode);\n\n        setFormInputvalidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            city: enteredCityIsValid,\n            postalCode: enteredPostalCode\n        })\n\n     const formIsValid =\n         enteredNameIsValid &&\n         enteredStreetIsValid &&\n         enteredCityIsValid &&\n         enteredPostalCodeIsValid;\n\n         if(!formIsValid) {\n           return;\n         }\n\n        console.log('Form Was Submitted!')\n         console.log(enteredName, enteredStreetIsValid, enteredCity, enteredPostalCode)\n    };\n\n    const nameControlClasses = `${classes.control} ${formInputvalidity.name ? '' : classes.invalid}`;\n    const streetControlClasses = `${classes.control} ${formInputvalidity.street ? '' : classes.invalid}`;\n    const cityControlClasses = `${classes.control} ${formInputvalidity.city ? '' : classes.invalid}`;\n    const postalCodeControlClasses = `${classes.control} ${formInputvalidity.postalCode ? '' : classes.invalid}`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputvalidity.name && <p>Please Enter A Valid Name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputvalidity.street && <p>Please Enter A Valid Street Address!</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\n        {!formInputvalidity.city && <p>Please Enter A Valid City!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputvalidity.postalCode && <p>Please Enter A Valid Postal Code (5 characters)</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}