{"ast":null,"code":"import _slicedToArray from\"/Users/alexisquintuna/Desktop/coding/React/FoodAppReact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from'react';import classes from'./Checkout.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()==='';};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,postalCode:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setFormInputsValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var postalCodeInputRef=useRef();var cityInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostalCode=postalCodeInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredCityIsValid=!isEmpty(enteredCity);var enteredPostalCodeIsValid=isFiveChars(enteredPostalCode);setFormInputsValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,postalCode:enteredPostalCodeIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredCityIsValid&&enteredPostalCodeIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredStreet,city:enteredCity,postalCode:enteredPostalCode},console.log('form was submitted'));};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.name?'':classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.street?'':classes.invalid);var postalCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.postalCode?'':classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.city?'':classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid street!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalCodeInputRef}),!formInputsValidity.postalCode&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid postal code (5 characters long)!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid city!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"sources":["/Users/alexisquintuna/Desktop/coding/React/FoodAppReact/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","name","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","console","log","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './Checkout.module.css';\n\nconst isEmpty = (value) => value.trim() === '';\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid,\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredCityIsValid &&\n      enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode,\n    },\n    console.log('form was submitted'));\n  };\n\n  const nameControlClasses = `${classes.control} ${\n    formInputsValidity.name ? '' : classes.invalid\n  }`;\n  const streetControlClasses = `${classes.control} ${\n    formInputsValidity.street ? '' : classes.invalid\n  }`;\n  const postalCodeControlClasses = `${classes.control} ${\n    formInputsValidity.postalCode ? '' : classes.invalid\n  }`;\n  const cityControlClasses = `${classes.control} ${\n    formInputsValidity.city ? '' : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef} />\n        {!formInputsValidity.postalCode && (\n          <p>Please enter a valid postal code (5 characters long)!</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}